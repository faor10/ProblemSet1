##Para esto debemos hacer la regresión y ver el R-cuadrado
reg1<-(income~Age+Age2, db2)
##How good is this model in sample fit?
##Para esto debemos hacer la regresión y ver el R-cuadrado
reg1<-(income~Age+Age2 , db2)
##How good is this model in sample fit?
##Para esto debemos hacer la regresión y ver el R-cuadrado
head(db2)
reg1<-(income~Age+Age2,db2)
reg1<-(income~Age+Age2)
View(db2)
View(db2)
reg1<-(income~Age+Age2, data=db2)
sum(db2)
summary(db2)
db2<-db2 %>% mutate(edad2<-(edad^2$))
db2<-db2 %>% mutate(edad2=edad^2)
require(tidyverse)
db2<-db2 %>% mutate(edad2=edad^2)
db2<-db2 %>% mutate(age2=age^2)
summary(db2$age2)
reg1<-(ingtot~Age+Age2, data=db2)
reg1<-(ingtot~Age+Age2.data=db2)
summary(db2$ingtot)
reg1<-(ingtot~Age+Age2,data=db2)
reg1<- (ingtot~Age+Age2 , data=db2)
save(db2, file="db2.Rdata")
load("C:/Users/francisco.alejandro1/Documents/BD/ProblemSet1/stores/db2.Rdata")
View(db2)
View(db2)
##How good is this model in sample fit?
##Para esto debemos hacer la regresión y ver el R-cuadrado
reg1<-(income~Age+Age2,data=db2)
##How good is this model in sample fit?
##Para esto debemos hacer la regresión y ver el R-cuadrado
reg<-(income~Age+Age2,data=db2)
##PUNTO 3##
require(tidyverse)
##How good is this model in sample fit?
##Para esto debemos hacer la regresión y ver el R-cuadrado
reg<-(income~Age+Age2,data=db2)
require(stargazer)
##How good is this model in sample fit?
##Para esto debemos hacer la regresión y ver el R-cuadrado
reg<-(income~Age+Age2,data=db2)
##How good is this model in sample fit?
##Para esto debemos hacer la regresión y ver el R-cuadrado
reg<-(income~Age+Age2,db2)
##How good is this model in sample fit?
##Para esto debemos hacer la regresión y ver el R-cuadrado
mod_1<-(income~Age+Age2,db2)
require(pacman)
##How good is this model in sample fit?
##Para esto debemos hacer la regresión y ver el R-cuadrado
mod_1<-(income~Age+Age2,db2)
##How good is this model in sample fit?
##Para esto debemos hacer la regresión y ver el R-cuadrado
mod_1<-lm(income~Age+Age2,db2)
##How good is this model in sample fit?
##Para esto debemos hacer la regresión y ver el R-cuadrado
mod_1<-lm(ingplot~age+age2,db2)
mod_1<-lm(ingtot~age+age2,db2)
summary(mod_1)
stargazer(mod_1)
install.packages(stargazer)
install.packages("stargazer")
install.packages("stargazer")
require(stargazer)
stargazer(mod_1)
stargazer(mod_1,type="text",title="Regresión ingresos-edad", out="mod_1.txt")
y=predict(mod_1,newdata=list(x=seq(from=1,to=15,length.out=1000)),
interval="confidence")
plot(x=predict(mod_1), y=db2$age,
xlab='Predicted Values',
ylab='Actual Values',
main='Predicted vs. Actual Values')
abline(a = 0, b = 1, lwd=2,
col = "green")
abline(a = 0, b = 1, lwd=2,
col = "green")
gplot(db2, aes(x = age, y = ingtot)) +
geom_point(alpha=0.7) +                           # observed data
geom_point(aes(x = age, y = mod_1$fitted.values),  # predicted data
color='red', alpha=0.5) +
geom_segment(aes(xend = age, yend = mod_1$fitted.values),
color='red', linetype='dashed', alpha=0.25)
ggplot(db2, aes(x = age, y = ingtot)) +
geom_point(alpha=0.7) +                           # observed data
geom_point(aes(x = age, y = mod_1$fitted.values),  # predicted data
color='red', alpha=0.5) +
geom_segment(aes(xend = age, yend = mod_1$fitted.values),
color='red', linetype='dashed', alpha=0.25)
install.packages("ggplot2")
ggplot(db2, aes(x = age, y = ingtot)) +
geom_point(alpha=0.7) +                           # observed data
geom_point(aes(x = age, y = mod_1$fitted.values),  # predicted data
color='red', alpha=0.5) +
geom_segment(aes(xend = age, yend = mod_1$fitted.values),
color='red', linetype='dashed', alpha=0.25)
plot(ingtot~age)
plot(x=db2$age, y=predict(mod_1),
xlab='Predicted Values',
ylab='Actual Values',
main='Predicted vs. Actual Values')
abline(a = 0, b = 1, lwd=2,
col = "green")
##Plot the predicted age-earnings profile implied by the above equation
plot(x=db2$age, y=predict(mod_1),
xlab='edad',
ylab='valores predichos',
main='Ingreso predicho vs Edad')
abline(a = 0, b = 1, lwd=2,
col = "green")
##Plot the predicted age-earnings profile implied by the above equation
plot(x=db2$age, y=predict(mod_1),
xlab='edad',
ylab='valores predichos',
main='Ingreso predicho vs Edad')
abline(lm(ingtot~age+age2),col="blue")
lines(sort(data$age),                 # Draw polynomial regression curve
fitted(my_mod)[order(data$age)],
col = "red",
type = "l")
lines(sort(db2$age),                 # Draw polynomial regression curve
fitted(my_mod)[order(db2$age)],
col = "red",
type = "l")
lines(sort(db2$age),                 # Draw polynomial regression curve
fitted(mod_1)[order(db2$age)],
col = "red",
type = "l")
plot(x=db2$age, y=predict(mod_1),
xlab='edad',
ylab='valores predichos',
main='Ingreso predicho vs Edad')
lines(sort(db2$age),                 # Draw polynomial regression curve
fitted(mod_1)[order(db2$age)],
col = "red",
type = "l")
##Plot the predicted age-earnings profile implied by the above equation
plot(x=db2$age, y=predict(mod_1),
xlab='edad',
ylab='valores predichos',
main='Ingreso predicho vs Edad')
lines(sort(db2$age),                 # Draw polynomial regression curve
fitted(mod_1)[order(db2$age)],
col = "blue",
type = "l")
b1<-coefs[2]
b2<-coefs[3]
mod_1<-lm(ingtot~age+age2,db2)
b1<-coefs[2]
b2<-coefs[3]
coefs<-mod_1$coef
coefs
b1<-coefs[2]
b2<-coefs[3]
##Para sacar Peak age toca derivar e igualar a 0 (derivada=B1+2B2AGE)
Peak_Age=-b1/2b2
##Para sacar Peak age toca derivar e igualar a 0 (derivada=B1+2B2AGE)
Peak_Age<--b1/2b2
##Para sacar Peak age toca derivar e igualar a 0 (derivada=B1+2B2AGE)
Peak_Age<-(-b1/2b2)
##Para sacar Peak age toca derivar e igualar a 0 (derivada=B1+2B2AGE)
Peak_Age=(-b1/2b2)
##Para sacar Peak age toca derivar e igualar a 0 (derivada=B1+2B2AGE)
Peak_Age<=c(-b1/2b2)
##Para sacar Peak age toca derivar e igualar a 0 (derivada=B1+2B2AGE)
-b1/2b2
##Para sacar Peak age toca derivar e igualar a 0 (derivada=B1+2B2AGE)
b1
b2
b1+b2
(-b1)/(2*b2)
Peakage=(-b1)/(2*b2)
Peakage
##Usa bootstap para calcular Error estándar y construir IDC
mean_age<-mean(db2$age)
elast_ingreso_edad<-b1+2*b2*mean_age ##para comprobar que el bootstrap esta bien
elast_ingreso_edad
eta_mod1.fn<-function(data,index,
mean_age=mean(db2$age), mean_age2=mean(db2$age2)){
mod_2<-(ingtot~mean_age+mean_age2, data, subset = index)
coefs<-f$coefficients
B1<-coefs[2]
B2<-coefs[3]
elastpt<-B1+2*B2*mean_age
return(elast)
}
eta_mod1.fn<-function(data,index,
mean_age=mean(db2$age), mean_age2=mean(db2$age2)) {
mod_2<-(ingtot~mean_age+mean_age2, data, subset = index)
coefs<-f$coefficients
B1<-coefs[2]
B2<-coefs[3]
elastpt<-B1+2*B2*mean_age
return(elast)
eta_mod1.fn<-function(data,index,
mean_age=mean(db2$age), mean_age2=mean(db2$age2)) {
mod_2<-(ingtot~mean_age+mean_age2, data, subset = index)
coefs<-f$coefficients
B1<-coefs[2]
B2<-coefs[3]
elastpt<-B1+2*B2*mean_age
return(elastpt)
}
eta_mod1.fn<-function(data,index,
mean_age=mean(db2$age),
mean_age2=mean(db2$age2)){
mod_2<-(ingtot~mean_age+mean_age2, data, subset = index)
coefs<-f$coefficients
B1<-coefs[2]
B2<-coefs[3]
elastpt<-B1+2*B2*mean_age
return(elastpt)
}
eta_mod1.fn<-function(data,index,
mean_age=mean(db2$age),
mean_age2=mean(db2$age2)){
mod_2<-(ingtot~mean_age+mean_age2, data, subset = index)
coefs<-mod_2$coefficients
B1<-coefs[2]
B2<-coefs[3]
elastpt<-B1+2*B2*mean_age
return(elastpt)
}
eta_mod1.fn<-function(data,index,
mean_age=mean(db2$age),
mean_age2=mean(db2$age2)){
mod_2<-(ingtot~mean_age+mean_age2, db2, subset = index)
coefs<-mod_2$coefficients
B1<-coefs[2]
B2<-coefs[3]
elastpt<-B1+2*B2*mean_age
return(elastpt)
}
eta_mod1.fn<-function(data,index,
mean_age=mean(db2$age),
mean_age2=mean(db2$age2)){
mod_2<-lm(ingtot~mean_age+mean_age2, db2, subset = index)
coefs<-mod_2$coefficients
B1<-coefs[2]
B2<-coefs[3]
elastpt<-B1+2*B2*mean_age
return(elastpt)
}
results<-boot(data=db2, eta_mod1.fn,R=1000)
results
require(boot)
results<-boot(data=db2, eta_mod1.fn,R=1000)
results
eta_mod1.fn<-function(data,index,
mean_age=mean(db2$age),
mean_age2=mean(db2$age2)){
mod_2<-lm(ingtot~age+age2, db2, subset = index)
coefs<-mod_2$coefficients
B1<-coefs[2]
B2<-coefs[3]
elastpt<-B1+2*B2*mean_age
return(elastpt)
}
require(boot)
results<-boot(data=db2, eta_mod1.fn,R=1000)
results
elastpt
elast_ingreso_edad
stagnazer(results)
stargazer(results)
results
stargazer(results)
stargazer("results")
stargazer(reulsts,type="text",title="Bootstrap Ingresos-edad", out="mod_1.txt")
stargazer(results,type="text",title="Bootstrap Ingresos-edad", out="mod_1.txt")
stargazer("results",type="text",title="Bootstrap Ingresos-edad", out="Bootstrap Ingresos-edad.txt")
stargazer("results",type="text",title="Bootstrap Ingresos-edad", out="Bootstrap Ingresos-edad.txt")
View(results)
View(results)
boot.ci(boot.out = bootstrap,
type = c("norm", "basic",
"perc", "bca"))
boot.ci(boot.out = boot,
type = c("norm", "basic",
"perc", "bca"))
quantile(eta_mod1.fn, c(0.025, 0.975))
##Intervalos de confianza
boot.ci(boot.out = bootstrap,
type = c("norm", "basic",
"perc", "bca"))
quantile(eta_mod1.fn, c(0.025, 0.975))
##Intervalos de confianza
library(AUC)
install.packages("AUC")
##Intervalos de confianza
install.package("AUC")
##Intervalos de confianza
install.packages("AUC")
boot.ci(boot.out = bootstrap,
type = c("norm", "basic",
"perc", "bca"))
boot.ci(boot.out = boot,
type = c("norm", "basic",
"perc", "bca"))
boot.ci(results,
type = c("norm", "basic",
"perc", "bca"))
quantile(results, c(0.025, 0.975))
boot.ci(results,conf=0.95
type = c("norm", "basic",
"perc", "bca"))
boot.ci(results,conf=0.95,
type = c("norm", "basic",
"perc", "bca"))
View(db2)
View(db2)
View(db2)
View(db2)
##Estimate the unconditional earnings gap
db2<- db2 %>% mutate(mujer <- ifelse(datos$sex == 0, 1, 0))
require(pacman)
db2<- db2 %>% mutate(mujer <- ifelse(datos$sex == 0, 1, 0))
require(tidyverse)
db2<- db2 %>% mutate(mujer <- ifelse(datos$sex == 0, 1, 0))
##Estimate the unconditional earnings gap
db2<- db2 %>% mutate(mujer <- ifelse(db2$sex == 0, 1, 0))
View(db2)
View(db2)
rename(db2, mujer = "mujer <- ifelse(db2$sex == 0, 1, 0")
rename(db2, mujer=`mujer <- ifelse(db2$sex == 0, 1, 0)`)
View(db2)
View(db2)
View(db2)
View(db2)
rename(db2, mujer="mujer <- ifelse(db2$sex == 0, 1, 0)")
View(db2)
View(db2)
rename(mujer=`mujer <- ifelse(db2$sex == 0, 1, 0)`)
rename(mujer = `mujer <- ifelse(db2$sex == 0, 1, 0)`)
rename(mujer = `mujer <- ifelse(db2$sex == 0, 1, 0)`
View(db2)
View(db2)
rename(mujer = `mujer <- ifelse(db2$sex == 0, 1, 0)`)
rename(mujer = `mujer <- ifelse(db2$sex == 0, 1, 0)`)
summary(db2$`mujer <- ifelse(db2$sex == 0, 1, 0)`)
db2 %>%
rename(
mujer = `mujer <- ifelse(db2$sex == 0, 1, 0)`
)
View(db2)
View(db2)
rename(mujer='mujer <- ifelse(db2$sex == 0, 1, 0)')
rename(mujer1=`mujer <- ifelse(db2$sex == 0, 1, 0)`)
rename(mujer1 ==`mujer <- ifelse(db2$sex == 0, 1, 0)`)
rename(mujer1 =`mujer <- ifelse(db2$sex == 0, 1, 0)`)
##Estimate the unconditional earnings gap
db2<- db2 %>% mutate(mujer = ifelse(db2$sex == 0, 1, 0))
View(db2)
db2<-db2 %>% mutate(log_ingreso<-log(datos$ingtot))
db2<-db2 %>% mutate(log_ingreso<-log(db2$ingtot))
View(db2)
View(db2)
db2<-db2 %>% mutate(log_ingreso=log(db2$ingtot))
View(db2)
View(db2)
mod_3<-lm(log_ingreso~mujer,data)
mod_3<-lm(log_ingreso~mujer,db2)
mod_3
db_imputado<- db_imputado %>% mutate(age2 = age^2)
View(db_imputado)
View(db_imputado)
##PUNTO 3##
require(tidyverse)
install.packages("stargazer")
require(stargazer)
require(pacman)
##How good is this model in sample fit?
summary(db_imputado$ingtot)
db_imputado<- db_imputado %>% mutate(age2 = age^2)
summary(db_imputado$ingtot)
db_imputado<- db_imputado %>% mutate(age2 = age^2)
summary(db_imputado$ingtot)
db_imputado<- db_imputado %>% mutate(age2 = age^2)
View(db_imputado)
View(db_imputado)
mod_1<-lm(ingtot~age+age2,db_imputado)
summary(mod_1)
stargazer(mod_1,type="text",title="Regresión ingresos-edad", out="mod1.txt")
##Plot the predicted age-earnings profile implied by the above equation
plot(x=db2$age, y=predict(mod_1),
xlab='edad',
ylab='valores predichos',
main='Ingreso predicho vs Edad')
lines(sort(db2$age),                 # Draw polynomial regression curve
fitted(mod_1)[order(db2$age)],
col = "blue",
type = "l")
##What is the “peak age” suggested by the above equation? Use bootstrap to
##calculate the standard errors and construct the confidence intervals.
coefs<-mod_1$coef
coefs
b1<-coefs[2]
b2<-coefs[3]
##Para sacar Peak age toca derivar e igualar a 0 (derivada=B1+2B2AGE)
b1
b2
b1+b2
Peakage=(-b1)/(2*b2)
Peakage
##Usa bootstap para calcular Error estándar y construir IDC
mean_age<-mean(db2$age)
elast_ingreso_edad<-b1+2*b2*mean_age ##para comprobar que el bootstrap esta bien
elast_ingreso_edad
eta_mod1.fn<-function(data,index,
mean_age=mean(db2$age),
mean_age2=mean(db2$age2)){
mod_2<-lm(ingtot~age+age2, db2, subset = index)
coefs<-mod_2$coefficients
B1<-coefs[2]
B2<-coefs[3]
elastpt<-B1+2*B2*mean_age
return(elastpt)
}
require(boot)
results<-boot(data=db2, eta_mod1.fn,R=1000)
results
plot(x=db_imputado$age, y=predict(mod_1),
xlab='edad',
ylab='valores predichos',
main='Ingreso predicho vs Edad')
lines(sort(db_imputado$age),                 # Draw polynomial regression curve
fitted(mod_1)[order(db2$age)],
col = "blue",
type = "l")
plot(x=db_imputado$age, y=predict(mod_1),
xlab='edad',
ylab='valores predichos',
main='Ingreso predicho vs Edad')
lines(sort(db_imputado$age),                 # Draw polynomial regression curve
fitted(mod_1)[order(db_imputado$age)],
col = "blue",
type = "l")
coefs<-mod_1$coef
coefs
b1<-coefs[2]
b2<-coefs[3]
b1
b2
b1+b2
Peakage=(-b1)/(2*b2)
Peakage
mean_age<-mean(db_imputado$age)
elast_ingreso_edad<-b1+2*b2*mean_age ##para comprobar que el bootstrap esta bien
elast_ingreso_edad
eta_mod1.fn<-function(data,index,
mean_age=mean(db_imputado$age),
mean_age2=mean(db_imputado$age2)){
mod_2<-lm(ingtot~age+age2, db_imputado, subset = index)
coefs<-mod_2$coefficients
B1<-coefs[2]
B2<-coefs[3]
elastpt<-B1+2*B2*mean_age
return(elastpt)
}
require(boot)
results<-boot(data=db_emputado, eta_mod1.fn,R=1000)
results
results<-boot(data=db_imputado, eta_mod1.fn,R=1000)
results
elastpt
elast_ingreso_edad
boot.ci(results,conf=0.95,
type = c("norm", "basic",
"perc", "bca"))
quantile(results, c(0.025, 0.975))
db_imputado<- db_imputado %>% mutate(mujer = ifelse(db_imputado$sex == 0, 1, 0))
View(db_imputado)
View(db_imputado)
db_imputado<-db_imputado %>% mutate(log_ingreso=log(db_imputado$ingtot))
mod_3<-lm(log_ingreso~mujer,db_imputado)
sum(mujer)
summarise(mujer)
summarise(db_imputado$mujer)
mean(db_imputado$mujer)
mod_3<-lm(log_ingreso~mujer,db_imputado)
View(db_imputado)
View(db_imputado)
str(db_imputado)
str(db_imputado$mujer)
recode(db_imputado$mujer, "1='mujer';0='hombre';else=NA")
View(db_imputado)
View(db_imputado)
mod_3<-lm(log_ingreso~mujer,db_imputado)
db_im <- data                                     # Duplicate data
data_im[is.na(data_im) | data_im == "Inf"] <- NA  # Replace NaN & Inf with NA
db_im[is.na(db_im) | db_im == "Inf"] <- NA  # Replace NaN & Inf with NA
cantidad_na <- sapply(db_imputado, function(x) sum(is.na(x)))
cantidad_na <- data.frame(cantidad_na)
View(cantidad_na)
View(cantidad_na)
View(db)
View(db)
View(db_imputado)
View(db_imputado)
mod_3<-lm(log_ingreso~mujer,db_imputado)
View(db_imputado)
View(db_imputado)
mod_3<-lm(log_ingreso~mujer,db_imputado)
tabulate(log_ingreso)
tabulate(db_imputado$log_ingreso)
summary(db_imputado$log_ingreso)
summary(db_imputado$log_ingreso)#Problema en estos datos#
mean(db_imputado$mujer)
str(db_imputado$mujer)
